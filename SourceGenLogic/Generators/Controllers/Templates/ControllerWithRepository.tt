<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;

namespace <#=Parameter.PreferredNameSpace#>;

[AllowAnonymous]
[ApiController]
[Route("api/[controller]")]
public class <#=Parameter.PluralName#>Controller : ControllerBase
{
    private readonly I<#=Parameter.PluralName#>Repository repository;

    public <#=Parameter.PluralName#>Controller(I<#=Parameter.PluralName#>Repository repository)
    {

        this.repository=repository;
    }
    [HttpGet("lookup")]
    public async Task<IActionResult> Lookup()
    {
        var result = await repository.Lookup();
        return Ok(result);
    }

    [HttpGet("{id}")]
    public async Task<IActionResult> Get(int id)
    {
        var result = await repository.Get(id);
        return Ok(result);
    }

    [HttpGet]
    public async Task<IActionResult> GetAll()
    {

        var result = await repository.GetAll();
        return Ok(result);
    }

    [HttpGet("paged/{pageIndex}/{pageSize}")]
    public async Task<IActionResult> GetAll(int pageIndex, int pageSize)
    {
        var result = await repository.GetAll(pageIndex, pageSize);
        return Ok(result);
    }

    [HttpGet("exists/{name}")]
    public async Task<IActionResult> IsExists(string name)
    {

        var result = await repository.IsExists(name);
        return Ok(result);
    }

    [HttpPost]
    public async Task<IActionResult> Add(<#=Parameter.EntityName#>DTO entityDto)
    {
        var result = await repository.Add(entityDto);
        return Ok(result);
    }

    [HttpPut]
    public async Task<IActionResult> Update(<#=Parameter.EntityName#>DTO entityDto)
    {
        var result = await repository.Update(entityDto);
        return Ok(result);
    }

    [HttpDelete("{id}")]
    public async Task<IActionResult> Delete(int id)
    {

        var result = await repository.Delete(id);
        return Ok(result);
    }
}
